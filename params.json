{"name":"Pet","tagline":"final project of NTU IOT 2015 spring","body":"## What is iPET?\r\n- a robot pet which can follow us around\r\n- a robot pet we can control it remotely\r\n- a robot pet showing us what it sees\r\n\r\n![iPET](http://graphics.csie.ntu.edu.tw/~fan/tmp/PET/_7031792.JPG)\r\n\r\n## Video\r\n\r\n\r\n## Work\r\n#### Hardware:\r\n- raspberry pi model B+ (with pi camera)\r\n- two motors and two wheels\r\n- 3D models designed by ourselves (see:  )\r\n\r\n#### Software architecture:\r\n#####Algorithm\r\n1. detect faces in current frame, and choose the biggest one to track\r\n2. in following frames\r\n   1. track the face\r\n   2. see if we lose track of the face, yes -> goto step 1\r\n   3. move the face to the center of the frame\r\n\r\n#####Implementation\r\nwe have several classes: PET, camera, controller, tracker, face detector\r\n\r\n######PET\r\n```\r\nwhile True:\r\n  get frame <== from camera\r\n  track certain area <== by tracker\r\n  try to move the area to the center of the frame <== use controller\r\n```\r\n######camera\r\n> interface of piCam\r\n\r\n######controller\r\n> \r\ninterface of motors  \r\nprovide 5 functions: **rotateLeft**, **rotateRight**, **goForward**, **goBackward**, **stay**\r\n\r\n######tracker\r\n```\r\nif we lose track of face:\r\n  detect face <== by face detector\r\n  mark the face as \"tracking area\"\r\n\r\nuse camshift to track \"tracking area\"\r\n```\r\n######face detector\r\n```\r\ndetect faces\r\nreturn area of the biggest one\r\n```\r\n\r\n![pic1](http://graphics.csie.ntu.edu.tw/~fan/tmp/PET/_7011780.JPG)  \r\n \r\n![pic2](http://graphics.csie.ntu.edu.tw/~fan/tmp/PET/_7031811.JPG)  \r\n\r\n\r\n## Authors and Contributors\r\n* [Fan Wang] (https://github.com/zxcand)  \r\n* [Chih-Yang Chen] (https://github.com/Jayis)  \r\n* Keng-Ming Lee  \r\n**instructor** : Wei-Chao Chen\r\n\r\n## Reference\r\n1. *Rainer Lienhart and Jochen Maydt. An Extended Set of Haar-like Features for Rapid Object Detection. IEEE ICIP 2002, Vol. 1, pp. 900-903, Sep. 2002*\r\n[[Implemented by OpenCV]] (http://docs.opencv.org/modules/objdetect/doc/cascade_classification.html?highlight=cascadeclassifier)\r\n2. *Bradski, G.R. “Computer Vision Face Tracking for Use in a Perceptual User Interface”, Intel, 1998*\r\n[[Implemented by OpenCV]] (http://docs.opencv.org/modules/video/doc/motion_analysis_and_object_tracking.html)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}